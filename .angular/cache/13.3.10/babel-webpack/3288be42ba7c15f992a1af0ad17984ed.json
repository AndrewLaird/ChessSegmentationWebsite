{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../chess-board/chess-board.component\";\n\nfunction LandingComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"div\", 8);\n    i0.ɵɵelement(3, \"div\");\n    i0.ɵɵelementStart(4, \"div\", 9)(5, \"span\");\n    i0.ɵɵtext(6, \"Example:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 10)(8, \"select\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function LandingComponent_div_1_Template_select_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.example_selected = $event;\n    })(\"ngModelChange\", function LandingComponent_div_1_Template_select_ngModelChange_8_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.select_change();\n    });\n    i0.ɵɵelementStart(9, \"option\", 12);\n    i0.ɵɵtext(10, \"Select...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 13);\n    i0.ɵɵtext(12, \"Gotham Chess\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 14);\n    i0.ɵɵtext(14, \"GMHikaru\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"option\", 15);\n    i0.ɵɵtext(16, \"Benjamin Finegold\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"option\", 16);\n    i0.ɵɵtext(18, \"ChessBrah\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"option\", 17);\n    i0.ɵɵtext(20, \"Agadmator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"option\", 18);\n    i0.ɵɵtext(22, \"Double Bong Cloud\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(23, \"div\", 19)(24, \"span\");\n    i0.ɵɵtext(25, \"Or\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 7)(27, \"form\", 20)(28, \"input\", 21, 22);\n    i0.ɵɵlistener(\"change\", function LandingComponent_div_1_Template_input_change_28_listener() {\n      i0.ɵɵrestoreView(_r7);\n\n      const _r5 = i0.ɵɵreference(29);\n\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.upload(_r5.files);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"label\", 23);\n    i0.ɵɵtext(31, \"Upload Chessboard\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"div\");\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.example_selected);\n    i0.ɵɵadvance(25);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\n\nfunction LandingComponent_div_2_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 29);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r10.imageURL, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction LandingComponent_div_2_label_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 30);\n    i0.ɵɵlistener(\"click\", function LandingComponent_div_2_label_6_Template_label_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.process();\n    });\n    i0.ɵɵtext(1, \"Process\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LandingComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"p\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 26);\n    i0.ɵɵtemplate(4, LandingComponent_div_2_img_4_Template, 1, 1, \"img\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtemplate(6, LandingComponent_div_2_label_6_Template, 2, 0, \"label\", 28);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.filename);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.imageURL);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.doneLoading);\n  }\n}\n\nfunction LandingComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \" No Chessboard found! Try one of the examples \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LandingComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"img\", 33);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LandingComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 35)(2, \"div\", 36)(3, \"div\", 37);\n    i0.ɵɵtext(4, \" Detected Chessboard: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 38)(6, \"img\", 39);\n    i0.ɵɵlistener(\"load\", function LandingComponent_div_5_Template_img_load_6_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.draw_cropped_image();\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 40)(8, \"div\", 37);\n    i0.ɵɵtext(9, \" Detected Pieces: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"app-chess-board\", 41, 42);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\")(13, \"div\");\n    i0.ɵɵtext(14, \" Fen: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 43);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 44)(18, \"div\", 45)(19, \"div\")(20, \"label\");\n    i0.ɵɵtext(21, \" Perspective: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\")(23, \"select\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function LandingComponent_div_5_Template_select_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.perspective = $event;\n    })(\"ngModelChange\", function LandingComponent_div_5_Template_select_ngModelChange_23_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.reverse_fen();\n    });\n    i0.ɵɵelementStart(24, \"option\", 47);\n    i0.ɵɵtext(25, \" White \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"option\", 48);\n    i0.ɵɵtext(27, \" Black \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(28, \"img\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 45)(30, \"div\")(31, \"label\");\n    i0.ɵɵtext(32, \" Turn: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(33, \"div\")(34, \"select\", 50);\n    i0.ɵɵlistener(\"ngModelChange\", function LandingComponent_div_5_Template_select_ngModelChange_34_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.move = $event;\n    });\n    i0.ɵɵelementStart(35, \"option\", 47);\n    i0.ɵɵtext(36, \" White \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"option\", 48);\n    i0.ɵɵtext(38, \" Black \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(39, \"img\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"div\", 45)(41, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function LandingComponent_div_5_Template_button_click_41_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.flip_board();\n    });\n    i0.ɵɵtext(42, \"Flip Board\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function LandingComponent_div_5_Template_button_click_43_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.copyToClipboard();\n    });\n    i0.ɵɵtext(44, \"Copy To Clipboard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"textarea\", 53);\n    i0.ɵɵtext(46);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"div\", 54);\n    i0.ɵɵelement(48, \"div\", 55)(49, \"div\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"div\", 56)(51, \"label\");\n    i0.ɵɵelement(52, \"img\", 57);\n    i0.ɵɵtext(53, \" Lichess \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(54, \"hr\", 58);\n    i0.ɵɵelementStart(55, \"div\", 7)(56, \"a\", 59)(57, \"label\");\n    i0.ɵɵtext(58, \"Editor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(59, \"a\", 59)(60, \"label\");\n    i0.ɵɵtext(61, \"Analysis\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(62, \"div\", 60)(63, \"label\");\n    i0.ɵɵelement(64, \"img\", 61);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(65, \"hr\", 58);\n    i0.ɵɵelementStart(66, \"div\", 7)(67, \"label\", 62);\n    i0.ɵɵtext(68, \"(Requires Copy/Paste)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(69, \"a\", 63)(70, \"label\");\n    i0.ɵɵtext(71, \"Analysis\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(72, \"div\", 64);\n    i0.ɵɵlistener(\"click\", function LandingComponent_div_5_Template_div_click_72_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.restart();\n    });\n    i0.ɵɵelementStart(73, \"button\", 65);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(74, \"svg\", 66);\n    i0.ɵɵelement(75, \"path\", 67);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"src\", ctx_r4.imageURL, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"fen\", ctx_r4.visible_fen);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r4.fen, \" \", ctx_r4.move, \" - - 0 1 \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.perspective);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"src\", ctx_r4.perspective == \"w\" ? \"assets/img/whiteking.png\" : \"assets/img/bk.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.move);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"src\", ctx_r4.move == \"w\" ? \"assets/img/WhiteKingMove.png\" : \"assets/img/BlackKingMove.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r4.fen, \" \", ctx_r4.move, \" - - 0 1\");\n    i0.ɵɵadvance(10);\n    i0.ɵɵpropertyInterpolate2(\"href\", \"https://lichess.org/editor/\", ctx_r4.fen, \"_\", ctx_r4.move, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate2(\"href\", \"https://lichess.org/analysis/\", ctx_r4.fen, \"_\", ctx_r4.move, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let LandingComponent = /*#__PURE__*/(() => {\n  class LandingComponent {\n    constructor(http) {\n      this.http = http;\n      this.message = '';\n      this.fen = '';\n      this.visible_fen = '';\n      this.loading = false;\n      this.doneLoading = false;\n      this.perspective = 'w';\n      this.move = 'w';\n      this.crop_data = \"\";\n      this.filename = \"No file chosen\";\n      this.example_selected = \"-1\";\n      this.file = new File(['not_found'], 'filename');\n      this.failed = false;\n    }\n\n    draw_cropped_image() {\n      let this_obj = this;\n      var img = new Image();\n      img.src = this.imagePath;\n      let boardX = (parseFloat(this.crop_data[1]) - parseFloat(this.crop_data[3]) / 2) * 100;\n      let boardY = (parseFloat(this.crop_data[2]) - parseFloat(this.crop_data[4]) / 2) * 100;\n      let boardWidth = parseFloat(this.crop_data[3]) * 100;\n      let boardHeight = parseFloat(this.crop_data[4]) * 100; //clip path will remove parts of the image to show only what we saw\n      //polygon(50% 0, 100% 50%, 50% 100%, 0 50%);\n      // top left\n\n      let tlx = boardX.toString() + '%';\n      let tly = boardY.toString() + '%'; // top right\n\n      let trx = (boardX + boardWidth).toString() + '%';\n      let top_right_y = boardY.toString() + '%'; // bottom right\n\n      let brx = (boardX + boardWidth).toString() + '%';\n      let bry = (boardY + boardHeight).toString() + '%'; // bottom left\n\n      let blx = boardX.toString() + '%';\n      let bly = (boardY + boardHeight).toString() + '%';\n      let polygon_str = \"polygon( \" + tlx + \" \" + tly + \", \" + trx + \" \" + top_right_y + \", \" + brx + \" \" + bry + \", \" + blx + \" \" + bly + \")\"; // this translate gets us to the top left, we want top middle\n\n      let translate_str = \"translate(-\" + boardX + \"%, -\" + boardY + \"% )\"; // Some math,\n      // if the image is 200px tall and our board is (X) percent of that\n      // our new board should be 200/X\n\n      let old_height = 300;\n      let new_height = Math.floor(old_height / (boardHeight / 100)).toString() + 'px'; // we know this is loaded because this function is only called after it's loaded\n\n      let cropped_image = document.getElementById('croppedImage');\n      cropped_image.style.clipPath = polygon_str;\n      cropped_image.style.transform = translate_str;\n      cropped_image.style.height = new_height;\n    }\n\n    reverse_fen() {\n      // using array reverse\n      this.move = this.move == \"w\" ? \"b\" : 'w';\n      this.fen = this.fen.split('').reverse().join('');\n    }\n\n    reverse_visible_fen() {\n      // using array reverse\n      this.visible_fen = this.visible_fen.split('').reverse().join('');\n    }\n\n    flip_board() {\n      // we have to talk about this\n      // the fen has to be from the perspective of white\n      // so if we let the user flip the board, they flip the perspective and who they are playing\n      this.reverse_visible_fen();\n      this.move = this.move == \"w\" ? \"b\" : 'w';\n      this.perspective = this.perspective == \"w\" ? \"b\" : 'w';\n    }\n\n    ngOnInit() {\n      // make the page scroll to the top on page refresh\n      window.scroll(0, 0);\n    }\n\n    copyToClipboard() {\n      // From: https://www.w3schools.com/howto/howto_js_copy_clipboard.asp\n      //   /* Get the text field */\n      var copyText = document.getElementById(\"copyArea\");\n      /* Select the text field */\n\n      copyText.select();\n      copyText.setSelectionRange(0, 99999);\n      /* For mobile devices */\n\n      const text = copyText.value;\n      /* Copy the text inside the text field */\n\n      navigator.clipboard.writeText(text).then(() => {\n        console.log(\"Text copied to clipboard\");\n      }).catch(err => {\n        console.error(\"Failed to copy text: \", err);\n      });\n    }\n\n    fen_returned() {\n      // deal with any tasks that have to be done after\n      // the api call is done\n      this.loading = false;\n      this.doneLoading = true; // swap the perspective to be which ever side the white king is \n      // closest to\n\n      let white_king_pos = this.fen.indexOf('K');\n\n      if (white_king_pos != -1) {\n        // if the white king is on the top\n        if (white_king_pos < this.fen.length / 2) {\n          this.perspective = 'b';\n          this.move = 'b';\n          this.fen = this.fen.split('').reverse().join('');\n        } else {\n          this.perspective = 'w';\n        }\n      }\n    }\n\n    process() {\n      this.loading = true;\n      const fd = new FormData();\n      fd.append('chessboard', this.file, this.file.name);\n      this.http.post('/api/', fd).subscribe(res_json => {\n        if (res_json != null && res_json['code'] == 0) {\n          this.fen = res_json['fen'];\n          this.visible_fen = this.fen;\n          this.crop_data = res_json['crop'].split(' ');\n          this.fen_returned();\n          this.failed = false;\n        } else {\n          this.failed = true;\n          this.loading = false;\n        }\n      });\n    }\n\n    select_change() {\n      // they selected a value so we will load it\n      let reader = new FileReader();\n\n      if (this.example_selected == '-1') {\n        return;\n      }\n\n      let loadImageURL = 'assets/img/' + this.example_selected;\n      this.http.get(loadImageURL, {\n        responseType: 'blob'\n      }).subscribe(data => {\n        let blob = new Blob([data], {\n          type: 'image/png'\n        });\n        this.file = new File([data], this.example_selected, {\n          type: 'image/png'\n        });\n        reader.readAsDataURL(this.file);\n\n        reader.onload = _event => {\n          this.imageURL = reader.result;\n        };\n\n        this.filename = this.file.name;\n        this.loading = false;\n        this.doneLoading = false;\n      });\n    }\n\n    upload(files) {\n      let reader = new FileReader();\n\n      if (files == null) {\n        return;\n      }\n\n      if (files.length == 0) {\n        this.message = \"No file was uploaded\";\n      } // Load the file so the user can see it\n\n\n      this.imagePath = files;\n      reader.readAsDataURL(files[0]);\n\n      reader.onload = _event => {\n        this.imageURL = reader.result;\n      };\n\n      this.file = files[0];\n      this.filename = this.file.name;\n      this.loading = false;\n      this.doneLoading = false; // then send the files to the api to get \n    } // reset to page load\n\n\n    restart() {\n      this.message = '';\n      this.fen = '';\n      this.visible_fen = '';\n      this.loading = false;\n      this.doneLoading = false;\n      this.perspective = 'w';\n      this.move = 'w';\n      this.crop_data = \"\";\n      this.filename = \"No file chosen\";\n      this.example_selected = \"-1\";\n      this.file = new File(['not_found'], 'filename');\n      this.failed = false;\n      window.scroll(0, 0);\n    }\n\n  }\n\n  LandingComponent.ɵfac = function LandingComponent_Factory(t) {\n    return new (t || LandingComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  LandingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LandingComponent,\n    selectors: [[\"app-landing\"]],\n    decls: 6,\n    vars: 5,\n    consts: [[1, \"container\"], [\"class\", \"image-upload container-fluid\", 4, \"ngIf\"], [\"class\", \"image_selection\", 4, \"ngIf\"], [\"class\", \"failed\", 4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"result-box\", 4, \"ngIf\"], [1, \"image-upload\", \"container-fluid\"], [1, \"row\"], [1, \"d-flex\", \"mt-2\", \"justify-content-end\", \"flex-row\", \"chessboard-select\"], [1, \"p-2\", \"mt-auto\", \"mb-auto\"], [1, \"p-2\"], [1, \"upload_examples\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"-1\"], [\"value\", \"GothamChess.png\"], [\"value\", \"GMHikaru.jpg\"], [\"value\", \"BenFinegold.png\"], [\"value\", \"ChessBrah.png\"], [\"value\", \"Agadmator.png\"], [\"value\", \"DoubleBongCloud.png\"], [1, \"row\", \"text-center\", \"mb-2\"], [\"action\", \"/api\", \"method\", \"post\", \"enctype\", \"multipart/form-data\"], [\"name\", \"chessboard\", \"id\", \"input-file-id\", \"type\", \"file\", 1, \"hidden\", 3, \"change\"], [\"chessboard_input\", \"\"], [\"for\", \"input-file-id\", 1, \"mb-4\", \"upload-button\"], [1, \"image_selection\"], [1, \"text-center\", \"chosen-file-name\"], [1, \"mb-2\"], [\"height\", \"250px\", 3, \"src\", 4, \"ngIf\"], [\"for\", \"process-input\", \"class\", \"upload-button\", 3, \"click\", 4, \"ngIf\"], [\"height\", \"250px\", 3, \"src\"], [\"for\", \"process-input\", 1, \"upload-button\", 3, \"click\"], [1, \"failed\"], [1, \"loading\"], [\"src\", \"assets/img/loadingRook.png\", 1, \"rotating\", \"mx-auto\"], [1, \"result-box\"], [1, \"row\", \"mt-2\"], [1, \"cropped-img\", \"col-lg-6\", \"col-md-12\"], [1, \"\"], [1, \"ms-auto\", \"me-auto\", \"cropped-container\"], [\"height\", \"300px\", \"id\", \"croppedImage\", 3, \"src\", \"load\"], [1, \"col-lg-6\", \"col-md-12\"], [3, \"fen\"], [\"childChessboard\", \"\"], [2, \"word-break\", \"break-all\"], [1, \"row\", \"justify-content-center\", \"pt-5\"], [1, \"col\"], [1, \"perspectiveSelect\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"w\"], [\"value\", \"b\"], [1, \"selectImg\", 3, \"src\"], [1, \"moveSelect\", 3, \"ngModel\", \"ngModelChange\"], [1, \"interact-button\", 3, \"click\"], [1, \"interact-button\", \"mt-1\", 3, \"click\"], [\"id\", \"copyArea\", 2, \"opacity\", \"0\", \"width\", \"0\", \"height\", \"0\"], [1, \"row\", \"mt-5\", \"justify-content-center\"], [1, \"col-3\"], [1, \"lichess\", \"mt-2\", \"col\"], [\"src\", \"assets/img/lichesshorse.png\", 1, \"logo\"], [1, \"w-100\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", 3, \"href\"], [1, \"chesscom\", \"mt-2\", \"mb-4\", \"col\"], [\"src\", \"assets/img/chesscom.png\", 1, \"logo\"], [2, \"font-size\", \".7em\"], [\"target\", \"_blank\", \"href\", \"https://chess.com/analysis\", \"rel\", \"noopener noreferrer\"], [1, \"d-flex\", \"pb-5\", 3, \"click\"], [1, \"me-auto\", \"ms-auto\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\"], [\"d\", \"M18.885 3.515c-4.617-4.618-12.056-4.676-16.756-.195l-2.129-2.258v7.938h7.484l-2.066-2.191c2.82-2.706 7.297-2.676 10.073.1 4.341 4.341 1.737 12.291-5.491 12.291v4.8c3.708 0 6.614-1.244 8.885-3.515 4.686-4.686 4.686-12.284 0-16.97z\"]],\n    template: function LandingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, LandingComponent_div_1_Template, 34, 2, \"div\", 1);\n        i0.ɵɵtemplate(2, LandingComponent_div_2_Template, 7, 3, \"div\", 2);\n        i0.ɵɵtemplate(3, LandingComponent_div_3_Template, 2, 0, \"div\", 3);\n        i0.ɵɵtemplate(4, LandingComponent_div_4_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(5, LandingComponent_div_5_Template, 76, 14, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.doneLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filename != \"No file chosen\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.failed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.doneLoading);\n      }\n    },\n    directives: [i2.NgIf, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.ChessBoardComponent],\n    styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}body[_ngcontent-%COMP%]{margin:0;font-family:Roboto,Helvetica Neue,sans-serif}[_ngcontent-%COMP%]:root{--center-width: 1000px;--primary: var(--bs-indigo);--backgroundGrey: #696969;--chessGrey: #312E2B;--chessBlack: #272522}.container[_ngcontent-%COMP%]{text-align:center;max-width:var(--center-width);width:100%;border-left:solid 1px black;border-right:solid 1px black;font-size:1.5em;min-height:30vh;background-color:#fdfdf0}.hidden[_ngcontent-%COMP%]{display:none}.upload-button[_ngcontent-%COMP%]{font-weight:300;font-size:1em;border-radius:.3em;line-height:1em;padding:.5em;color:var(--primary);background-color:#fff;border:1px solid var(--primary)}.upload-button[_ngcontent-%COMP%]:hover{color:#fff;background-color:var(--primary);border:1px solid white}.white-on[_ngcontent-%COMP%]{padding:10px;border:solid 2px black;border-radius:.5em}.white-off[_ngcontent-%COMP%], .black-on[_ngcontent-%COMP%], .black-off[_ngcontent-%COMP%]{padding:10px;border:solid 2px black;border-radius:.5em;background-color:#000;color:#fff}.uploaded-image[_ngcontent-%COMP%]{margin-top:10px;text-align:center}#croppedImg[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto}.cropped-img[_ngcontent-%COMP%]{height:350px;text-align:center}.cropped-container[_ngcontent-%COMP%]{height:300px;width:300px}.inline[_ngcontent-%COMP%]{display:inline}.perspectiveSelect[_ngcontent-%COMP%], .moveSelect[_ngcontent-%COMP%]{padding-left:10px;padding-right:10px}.selectImg[_ngcontent-%COMP%]{height:70px;padding-left:5px}.exit-button[_ngcontent-%COMP%]{background-color:var(--chessGrey);padding:10px;border-radius:.5em;color:#fff}.exit-button[_ngcontent-%COMP%]:hover{background-color:#fff;color:var(--chessGrey);border:solid 1px var(--chessGrey)}@keyframes rotation{0%{transform:rotate(0)}to{transform:rotate(359deg)}}.rotating[_ngcontent-%COMP%]{animation:rotation 2s infinite linear}.interact-button[_ngcontent-%COMP%]{padding:10px;border-radius:.5em;text-align:center;text-decoration:none;display:inline-block}.logo[_ngcontent-%COMP%]{height:3em}.footer[_ngcontent-%COMP%]{height:10em}.chessboard-select[_ngcontent-%COMP%]{max-width:400px;margin:auto}\"]\n  });\n  return LandingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}